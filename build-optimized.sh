#!/bin/bash

# Script de build optimis√© pour VPS 1GB RAM
# Ce script aide √† builder Next.js avec tr√®s peu de m√©moire

echo "üöÄ Build optimis√© pour VPS 1GB RAM"
echo "=================================="

# 1. Nettoyer le cache Next.js
echo "üì¶ Nettoyage du cache..."
rm -rf .next
rm -rf node_modules/.cache

# 2. Lib√©rer la m√©moire syst√®me
echo "üßπ Lib√©ration de la m√©moire..."
sync
echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || echo "  (n√©cessite sudo pour drop_caches)"

# 3. Afficher la m√©moire disponible
echo "üíæ M√©moire disponible:"
free -h | grep Mem

# 4. Build avec limite m√©moire stricte + optimisations
echo ""
echo "üî® D√©marrage du build (cela peut prendre 1-2 minutes)..."
echo "   Limite m√©moire: 384MB (ultra-conservateur)"
echo ""

# Utiliser 384MB au lieu de 512MB pour plus de s√©curit√©
NODE_OPTIONS="--max-old-space-size=384 --max-semi-space-size=2" yarn build

BUILD_EXIT_CODE=$?

if [ $BUILD_EXIT_CODE -eq 0 ]; then
    echo ""
    echo "‚úÖ Build r√©ussi !"
    echo ""
    echo "üìä Taille du build:"
    du -sh .next 2>/dev/null || echo "  .next non trouv√©"
    echo ""
    echo "üöÄ Pour d√©marrer: yarn start"
else
    echo ""
    echo "‚ùå Build √©chou√© avec code: $BUILD_EXIT_CODE"
    
    if [ $BUILD_EXIT_CODE -eq 137 ]; then
        echo ""
        echo "‚ö†Ô∏è  Code 137 = SIGKILL (manque de m√©moire)"
        echo ""
        echo "Solutions possibles:"
        echo "1. Ajouter un swap file (recommand√©):"
        echo "   sudo dd if=/dev/zero of=/swapfile bs=1M count=1024"
        echo "   sudo chmod 600 /swapfile"
        echo "   sudo mkswap /swapfile"
        echo "   sudo swapon /swapfile"
        echo ""
        echo "2. Fermer d'autres services temporairement:"
        echo "   sudo service apache2 stop"
        echo "   sudo service mysql stop"
        echo ""
        echo "3. Builder sur une autre machine et copier .next/"
    fi
    
    exit $BUILD_EXIT_CODE
fi
